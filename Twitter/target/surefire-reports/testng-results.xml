<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="4" total="16" passed="11">
  <reporter-output>
    <line>
      <![CDATA[Extent Report DirectoryC:\Aarti\Java\ProjectMavenTeam3\Team_3_Framework_Project\Twitter\target\surefire-reports\html]]>
    </line>
  </reporter-output>
  <suite name="Twitter Automation Test" duration-ms="135970" started-at="2018-01-27T04:56:04Z" finished-at="2018-01-27T04:58:20Z">
    <groups>
    </groups>
    <test name="Twitter Home" duration-ms="135970" started-at="2018-01-27T04:56:04Z" finished-at="2018-01-27T04:58:20Z">
      <class name="testHomePageObjects.TestHomePage">
        <test-method status="PASS" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="extentSetup" is-config="true" duration-ms="288" started-at="2018-01-26T20:56:04Z" finished-at="2018-01-26T20:56:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4204541c]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report DirectoryC:\Aarti\Java\ProjectMavenTeam3\Team_3_Framework_Project\Twitter\target\surefire-reports\html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="setUp" is-config="true" duration-ms="9033" started-at="2018-01-26T20:56:04Z" finished-at="2018-01-26T20:56:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="startExtent" is-config="true" duration-ms="11" started-at="2018-01-26T20:56:13Z" finished-at="2018-01-26T20:56:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePageObjects.TestHomePage.testBlogLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="initializePageObjects" is-config="true" duration-ms="75" started-at="2018-01-26T20:56:13Z" finished-at="2018-01-26T20:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="testBlogLink()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="testBlogLink" duration-ms="90" started-at="2018-01-26T20:56:13Z" finished-at="2018-01-26T20:56:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBlogLink -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="afterEachTestMethod" is-config="true" duration-ms="3199" started-at="2018-01-26T20:56:14Z" finished-at="2018-01-26T20:56:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBlogLink status=SUCCESS method=TestHomePage.testBlogLink()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="closeOut" is-config="true" duration-ms="3" started-at="2018-01-26T20:56:17Z" finished-at="2018-01-26T20:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="setUp" is-config="true" duration-ms="8406" started-at="2018-01-26T20:56:17Z" finished-at="2018-01-26T20:56:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="startExtent" is-config="true" duration-ms="1" started-at="2018-01-26T20:56:25Z" finished-at="2018-01-26T20:56:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePageObjects.TestHomePage.testHelpCenterLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="initializePageObjects" is-config="true" duration-ms="2" started-at="2018-01-26T20:56:25Z" finished-at="2018-01-26T20:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="testHelpCenterLink()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="testHelpCenterLink" duration-ms="71" started-at="2018-01-26T20:56:25Z" finished-at="2018-01-26T20:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHelpCenterLink -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="afterEachTestMethod" is-config="true" duration-ms="1136" started-at="2018-01-26T20:56:25Z" finished-at="2018-01-26T20:56:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHelpCenterLink status=SUCCESS method=TestHomePage.testHelpCenterLink()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="closeOut" is-config="true" duration-ms="1" started-at="2018-01-26T20:56:26Z" finished-at="2018-01-26T20:56:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="setUp" is-config="true" duration-ms="6190" started-at="2018-01-26T20:56:26Z" finished-at="2018-01-26T20:56:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="startExtent" is-config="true" duration-ms="3" started-at="2018-01-26T20:56:33Z" finished-at="2018-01-26T20:56:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePageObjects.TestHomePage.testHeroImage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="initializePageObjects" is-config="true" duration-ms="7" started-at="2018-01-26T20:56:33Z" finished-at="2018-01-26T20:56:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="testHeroImage()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="testHeroImage" duration-ms="15743" started-at="2018-01-26T20:56:33Z" finished-at="2018-01-26T20:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeroImage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="afterEachTestMethod" is-config="true" duration-ms="1138" started-at="2018-01-26T20:56:48Z" finished-at="2018-01-26T20:56:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHeroImage status=SUCCESS method=TestHomePage.testHeroImage()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="setUp" is-config="true" duration-ms="7537" started-at="2018-01-26T20:56:49Z" finished-at="2018-01-26T20:56:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:56:49Z" finished-at="2018-01-26T20:56:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="initializePageObjects" is-config="true" duration-ms="1" started-at="2018-01-26T20:56:57Z" finished-at="2018-01-26T20:56:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="startExtent" is-config="true" duration-ms="0" started-at="2018-01-26T20:56:57Z" finished-at="2018-01-26T20:56:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePageObjects.TestHomePage.testHomePageText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testHomePageText()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="testHomePageText" duration-ms="83" started-at="2018-01-26T20:56:57Z" finished-at="2018-01-26T20:56:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomePageText -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="afterEachTestMethod" is-config="true" duration-ms="1023" started-at="2018-01-26T20:56:57Z" finished-at="2018-01-26T20:56:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomePageText status=SUCCESS method=TestHomePage.testHomePageText()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:56:58Z" finished-at="2018-01-26T20:56:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="setUp" is-config="true" duration-ms="5244" started-at="2018-01-26T20:56:58Z" finished-at="2018-01-26T20:57:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="startExtent" is-config="true" duration-ms="1" started-at="2018-01-26T20:57:03Z" finished-at="2018-01-26T20:57:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testHomePageObjects.TestHomePage.verifyTotalLinksHomePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="initializePageObjects" is-config="true" duration-ms="0" started-at="2018-01-26T20:57:03Z" finished-at="2018-01-26T20:57:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="verifyTotalLinksHomePage()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="verifyTotalLinksHomePage" duration-ms="5494" started-at="2018-01-26T20:57:03Z" finished-at="2018-01-26T20:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTotalLinksHomePage -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="afterEachTestMethod" is-config="true" duration-ms="1124" started-at="2018-01-26T20:57:09Z" finished-at="2018-01-26T20:57:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTotalLinksHomePage status=SUCCESS method=TestHomePage.verifyTotalLinksHomePage()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="closeOut" is-config="true" duration-ms="1" started-at="2018-01-26T20:57:10Z" finished-at="2018-01-26T20:57:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="generateReport()[pri:0, instance:testHomePageObjects.TestHomePage@1e7c7811]" name="generateReport" is-config="true" duration-ms="45" started-at="2018-01-26T20:58:20Z" finished-at="2018-01-26T20:58:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testHomePageObjects.TestHomePage -->
      <class name="testSettingsPageObjects.testSettingsPage">
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="setUp" is-config="true" duration-ms="8176" started-at="2018-01-26T20:57:49Z" finished-at="2018-01-26T20:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="startExtent" is-config="true" duration-ms="0" started-at="2018-01-26T20:57:58Z" finished-at="2018-01-26T20:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testSettingsPageObjects.testSettingsPage.testPersonlizeCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="initializePageObjects" is-config="true" duration-ms="14" started-at="2018-01-26T20:57:58Z" finished-at="2018-01-26T20:57:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="testPersonlizeCheckBox()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="testPersonlizeCheckBox" duration-ms="1514" started-at="2018-01-26T20:57:58Z" finished-at="2018-01-26T20:57:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersonlizeCheckBox -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="afterEachTestMethod" is-config="true" duration-ms="1061" started-at="2018-01-26T20:57:59Z" finished-at="2018-01-26T20:58:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPersonlizeCheckBox status=SUCCESS method=testSettingsPage.testPersonlizeCheckBox()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:58:00Z" finished-at="2018-01-26T20:58:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="setUp" is-config="true" duration-ms="6526" started-at="2018-01-26T20:58:00Z" finished-at="2018-01-26T20:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="startExtent" is-config="true" duration-ms="0" started-at="2018-01-26T20:58:07Z" finished-at="2018-01-26T20:58:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testSettingsPageObjects.testSettingsPage.testPersonlizeDevicesCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="initializePageObjects" is-config="true" duration-ms="1" started-at="2018-01-26T20:58:07Z" finished-at="2018-01-26T20:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="testPersonlizeDevicesCheckBox()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="testPersonlizeDevicesCheckBox" duration-ms="1803" started-at="2018-01-26T20:58:07Z" finished-at="2018-01-26T20:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPersonlizeDevicesCheckBox -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="afterEachTestMethod" is-config="true" duration-ms="1024" started-at="2018-01-26T20:58:08Z" finished-at="2018-01-26T20:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPersonlizeDevicesCheckBox status=SUCCESS method=testSettingsPage.testPersonlizeDevicesCheckBox()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="setUp" is-config="true" duration-ms="7406" started-at="2018-01-26T20:58:09Z" finished-at="2018-01-26T20:58:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:58:09Z" finished-at="2018-01-26T20:58:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="startExtent" is-config="true" duration-ms="1" started-at="2018-01-26T20:58:17Z" finished-at="2018-01-26T20:58:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testSettingsPageObjects.testSettingsPage.testTrackTwitterCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="initializePageObjects" is-config="true" duration-ms="1" started-at="2018-01-26T20:58:17Z" finished-at="2018-01-26T20:58:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="testTrackTwitterCheckBox()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="testTrackTwitterCheckBox" duration-ms="2247" started-at="2018-01-26T20:58:17Z" finished-at="2018-01-26T20:58:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrackTwitterCheckBox -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="afterEachTestMethod" is-config="true" duration-ms="1147" started-at="2018-01-26T20:58:19Z" finished-at="2018-01-26T20:58:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTrackTwitterCheckBox status=SUCCESS method=testSettingsPage.testTrackTwitterCheckBox()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testSettingsPageObjects.testSettingsPage@1a3869f4]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:58:20Z" finished-at="2018-01-26T20:58:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
      </class> <!-- testSettingsPageObjects.testSettingsPage -->
      <class name="testLoginPageObjects.testLoginPage">
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="setUp" is-config="true" duration-ms="5624" started-at="2018-01-26T20:57:10Z" finished-at="2018-01-26T20:57:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="startExtent" is-config="true" duration-ms="1" started-at="2018-01-26T20:57:16Z" finished-at="2018-01-26T20:57:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLoginPageObjects.testLoginPage.testBlankEmailPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="initializePageObjects" is-config="true" duration-ms="2" started-at="2018-01-26T20:57:16Z" finished-at="2018-01-26T20:57:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="FAIL" signature="testBlankEmailPassword()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="testBlankEmailPassword" duration-ms="1470" started-at="2018-01-26T20:57:16Z" finished-at="2018-01-26T20:57:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertTrue(Assert.java:44)at org.testng.Assert.assertTrue(Assert.java:54)at testLoginPageObjects.testLoginPage.testBlankEmailPassword(testLoginPage.java:25)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBlankEmailPassword -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="afterEachTestMethod" is-config="true" duration-ms="2033" started-at="2018-01-26T20:57:17Z" finished-at="2018-01-26T20:57:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBlankEmailPassword status=FAILURE method=testLoginPage.testBlankEmailPassword()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="setUp" is-config="true" duration-ms="9452" started-at="2018-01-26T20:57:19Z" finished-at="2018-01-26T20:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:57:19Z" finished-at="2018-01-26T20:57:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="startExtent" is-config="true" duration-ms="1" started-at="2018-01-26T20:57:29Z" finished-at="2018-01-26T20:57:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLoginPageObjects.testLoginPage.testInvalidEmailBlankPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="initializePageObjects" is-config="true" duration-ms="1" started-at="2018-01-26T20:57:29Z" finished-at="2018-01-26T20:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="testInvalidEmailBlankPassword()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="testInvalidEmailBlankPassword" duration-ms="2345" started-at="2018-01-26T20:57:29Z" finished-at="2018-01-26T20:57:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEmailBlankPassword -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="afterEachTestMethod" is-config="true" duration-ms="1052" started-at="2018-01-26T20:57:31Z" finished-at="2018-01-26T20:57:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidEmailBlankPassword status=SUCCESS method=testLoginPage.testInvalidEmailBlankPassword()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:57:32Z" finished-at="2018-01-26T20:57:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="setUp" is-config="true" duration-ms="5254" started-at="2018-01-26T20:57:32Z" finished-at="2018-01-26T20:57:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="startExtent" is-config="true" duration-ms="1" started-at="2018-01-26T20:57:37Z" finished-at="2018-01-26T20:57:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLoginPageObjects.testLoginPage.testInvalidEmailInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="initializePageObjects" is-config="true" duration-ms="1" started-at="2018-01-26T20:57:37Z" finished-at="2018-01-26T20:57:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="testInvalidEmailInvalidPassword()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="testInvalidEmailInvalidPassword" duration-ms="2321" started-at="2018-01-26T20:57:37Z" finished-at="2018-01-26T20:57:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEmailInvalidPassword -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="afterEachTestMethod" is-config="true" duration-ms="1061" started-at="2018-01-26T20:57:40Z" finished-at="2018-01-26T20:57:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidEmailInvalidPassword status=SUCCESS method=testLoginPage.testInvalidEmailInvalidPassword()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:57:41Z" finished-at="2018-01-26T20:57:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
        <test-method status="PASS" signature="setUp(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="setUp" is-config="true" duration-ms="5680" started-at="2018-01-26T20:57:41Z" finished-at="2018-01-26T20:57:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[browserstack]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[62.0]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[https://twitter.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="initializePageObjects()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="initializePageObjects" is-config="true" duration-ms="1" started-at="2018-01-26T20:57:46Z" finished-at="2018-01-26T20:57:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializePageObjects -->
        <test-method status="PASS" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="startExtent" is-config="true" duration-ms="0" started-at="2018-01-26T20:57:46Z" finished-at="2018-01-26T20:57:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testLoginPageObjects.testLoginPage.testblankEmailInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method status="PASS" signature="testblankEmailInvalidPassword()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="testblankEmailInvalidPassword" duration-ms="1987" started-at="2018-01-26T20:57:46Z" finished-at="2018-01-26T20:57:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testblankEmailInvalidPassword -->
        <test-method status="PASS" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="afterEachTestMethod" is-config="true" duration-ms="1105" started-at="2018-01-26T20:57:48Z" finished-at="2018-01-26T20:57:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testblankEmailInvalidPassword status=SUCCESS method=testLoginPage.testblankEmailInvalidPassword()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="closeOut()[pri:0, instance:testLoginPageObjects.testLoginPage@77ec78b9]" name="closeOut" is-config="true" duration-ms="0" started-at="2018-01-26T20:57:49Z" finished-at="2018-01-26T20:57:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeOut -->
      </class> <!-- testLoginPageObjects.testLoginPage -->
    </test> <!-- Twitter Home -->
  </suite> <!-- Twitter Automation Test -->
</testng-results>
